[project]
name = "CEmu"
version = "0.8.0"
authors = [{ name = "hugsy", email = "hugsy@blah.cat" }]
description = "Cemu is a simple assembly/dissembly/emulation IDE that provides an easy Plug-n-Play environment to start playing with many architectures (currently supports x86-{32,64}, ARM, AARCH64, MIPS, MIPS64, SPARC and PPC)."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Assemblers",
    "Natural Language :: English",
    "Environment :: Console",
]
keywords = [
    "assembly",
    "disassembly",
    "emulation",
    "x86",
    "x64",
    "arm",
    "aarch64",
    "mips",
    "powerpc",
    "sparc",
]

dependencies = [
    "capstone>=5.0.1",
    "unicorn>=2.0.1.post1",
    "keystone-engine>=0.9.2",
    "pygments>=2.18.0",
    "lief>=0.15.1",
    "loguru>=0.7.2",
    "prompt-toolkit>=3.0.47",
    "pyqt6>=6.7.1",
    "setuptools>=72.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "coverage>=7.6.0",
    "debugpy>=1.8.2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/cemu"]

[project.scripts]
cemu = "cemu.__main__:main"

[project.gui-scripts]
cemu = "cemu.__main__:main"

[project.urls]
"Homepage" = "https://github.com/hugsy/cemu"
"Bug Tracker" = "https://github.com/hugsy/cemu/issues"

[tool.pytest.ini_options]
minversion = "6.0"
python_functions = ["test_*", "time_*"]
python_files = ["*.py"]
log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
# addopts = "--cov --cov-report html --cov-report term-missing --cov-fail-under 45"
testpaths = ["tests"]
pythonpath = ["."]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    # `unicorn` uses `pkg_resources` which is deprecated, ignore the warning
    'ignore:.*_pytest\\assertion\\rewrite.py.*',
]


[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py310"
line-length = 140

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = ["E", "F"]
ignore = []
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint.mccabe]
max-complexity = 10
