name: "Continuous Delivery"
on:
  workflow_dispatch:

env:
  NAME: cemu
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

jobs:
  build:
    name: "Building cemu"
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.9,3.11]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - uses: rlespinasse/github-slug-action@v3.x

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: "Install Pre-requisite for Linux build"
      if: startsWith(matrix.os, 'ubuntu')
      shell: bash
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install -y build-essential python3-dev python3-pip python3-wheel python3-setuptools

    - name: "Install Pre-requisite for Windows build"
      if: startsWith(matrix.os, 'windows')
      shell: pwsh
      run: |
        echo todo

    - name: Build artifact
      shell: bash
      run: |
        mkdir build
        mkdir build/bin
        python --version
        python -m pip --version
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --user --upgrade -r requirements.txt
        python -m pip install --user --upgrade .

    - name: "Post build actions for Windows"
      if: startsWith(matrix.os, 'windows')
      shell: pwsh
      run: |
        Copy-Item $env:APPDATA\Python\Python*\Scripts\cemu.exe build\bin\

    - name: "Post build actions for Linux/MacOS"
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
      shell: bash
      run: |
        cp -v ~/.local/bin/cemu build/bin/

    - name: Publish artifact
      id: publish_artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.NAME }}_${{ matrix.os }}_py${{ matrix.python }}_${{ env.GITHUB_REF_SLUG }}_${{ env.GITHUB_SHA_SHORT }}
        path: build/

    - name: Failure notification
      if: failure()
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: Failed to build
        description: |
          Failed to build
          ```
          ${{ env.NAME }}_${{ matrix.os }}_py${{ matrix.python }}_${{ env.GITHUB_REF_SLUG }}_${{ env.GITHUB_SHA_SHORT }}
          ```
        color: 0xff0000
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}

    - name: Success notification
      if: success()
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: Successful Build
        description: |
          Successful build:
          ```
          ${{ env.NAME }}_${{ matrix.os }}_py${{ matrix.python }}_${{ env.GITHUB_REF_SLUG }}_${{ env.GITHUB_SHA_SHORT }}
          ```
        color: 0x00ff00
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}